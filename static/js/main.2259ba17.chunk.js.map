{"version":3,"sources":["installStyles.js","components/TitleBar.js","components/InputForm.js","lib/generator.js","components/Results.js","lib/excel.js","layout/App.js","index.js"],"names":["install","useStyles","makeStyles","toolbar","display","justifyContent","TitleBar","classes","react_default","a","createElement","AppBar_default","position","color","Toolbar_default","className","Typography_default","variant","process","card","width","maxWidth","margin","form","padding","flexFlow","alignContent","row","marginTop","marginBottom","number","flexGrow","marginLeft","marginRight","actions","NumberInput","_ref2","label","defaultValue","onChange","_ref2$className","_useState","useState","_useState2","Object","slicedToArray","val","setVal","TextField_default","value","e","newVal","parseInt","target","isNaN","type","InputLabelProps","shrink","InputForm","_ref3","onGenerate","_useState3","min","max","count","enabled","_useState4","state","setState","handleChange","prop","newState","objectSpread","defineProperty","_ref","validate","Card_default","elevation","CardContent_default","noValidate","autoComplete","CardActions_default","Button_default","size","disabled","onClick","getRandomIntInclusive","Math","ceil","floor","random","roundAvg","arr","round","reduce","total","i","length","generateRandomList","Error","list","push","root","table","spacer","icon","Results","results","avg","Paper_default","IconButton_default","data","map","r","unshift","ws","XLSX","utils","aoa_to_sheet","wb","book_new","book_append_sheet","filename","concat","Date","getTime","writeFile","createExcelFile","Save_default","Table_default","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","key","height","alignItems","overflowContainer","overflow","ReactDOM","render","CssBaseline_default","console","debug","error","generateTargetList","document","getElementById"],"mappings":"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","file":"static/js/main.2259ba17.chunk.js","sourcesContent":["import { install } from \"@material-ui/styles\";\ninstall();","import React from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles({\n  toolbar: {\n    display: \"flex\",\n    justifyContent: \"center\"\n  }\n});\n\nexport default function TitleBar() {\n  const classes = useStyles();\n  return (\n    <AppBar position=\"static\" color=\"primary\">\n      <Toolbar className={classes.toolbar}>\n        <Typography variant=\"h6\" color=\"inherit\">\n          {process.env.REACT_APP_PAGE_TITLE}\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst useStyles = makeStyles({\n  card: {\n    width: 400,\n    maxWidth: \"95%\",\n    margin: \"0 auto\"\n  },\n  form: {\n    width: \"100%\",\n    padding: 8,\n    display: \"flex\",\n    flexFlow: \"column nowrap\",\n    alignContent: \"stretch\"\n  },\n  row: {\n    display: \"flex\",\n    justifyContent: \"stretch\",\n    marginTop: 8,\n    marginBottom: 8\n  },\n  number: {\n    flexGrow: 1,\n    marginLeft: \"4px\",\n    marginRight: \"4px\"\n  },\n  actions: {\n    justifyContent: \"center\"\n  }\n});\n\nfunction validate({ min, max, count, target }) {\n  if (min >= max) return false;\n  if (min < 1 || max < 1) return false;\n  if (count < 2) return false;\n  if (target < 1) return false;\n  return true;\n}\n\nfunction NumberInput({ label, defaultValue, onChange, className = \"\" }) {\n  const [val, setVal] = useState(defaultValue);\n  function handleChange(e) {\n    let newVal = parseInt(e.target.value);\n    if (isNaN(newVal)) {\n      onChange(0);\n      setVal(\"\");\n    } else {\n      onChange(newVal);\n      setVal(newVal);\n    }\n  }\n  return (\n    <TextField\n      className={className}\n      label={label}\n      value={val}\n      onChange={handleChange}\n      type=\"number\"\n      variant=\"outlined\"\n      InputLabelProps={{\n        shrink: true\n      }}\n    />\n  );\n}\n\nexport default function InputForm({ onGenerate }) {\n  const [state, setState] = useState({\n    target: 10,\n    min: 5,\n    max: 15,\n    count: 20,\n    enabled: true\n  });\n  const classes = useStyles();\n\n  function handleChange(prop) {\n    return function(val) {\n      const newState = { ...state, [prop]: val };\n      newState.enabled = validate(newState);\n      setState(newState);\n    };\n  }\n\n  function handleGenerate() {\n    onGenerate(state);\n  }\n  return (\n    <Card className={classes.card} elevation={5}>\n      <CardContent>\n        <form noValidate autoComplete=\"off\" className={classes.form}>\n          <div className={classes.row}>\n            <NumberInput\n              label=\"Target VR\"\n              defaultValue={state.target}\n              onChange={handleChange(\"target\")}\n              className={classes.number}\n            />\n            <NumberInput\n              label=\"Amount to Generate\"\n              defaultValue={state.count}\n              onChange={handleChange(\"count\")}\n              className={classes.number}\n            />\n          </div>\n          <div className={classes.row}>\n            <NumberInput\n              label=\"Min Ratio\"\n              defaultValue={state.min}\n              onChange={handleChange(\"min\")}\n              className={classes.number}\n            />\n            <NumberInput\n              label=\"Max Ratio\"\n              defaultValue={state.max}\n              onChange={handleChange(\"max\")}\n              className={classes.number}\n            />\n          </div>\n        </form>\n      </CardContent>\n      <CardActions className={classes.actions}>\n        <Button size=\"small\" disabled={!state.enabled} onClick={handleGenerate}>\n          Generate\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n","function getRandomIntInclusive(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport function roundAvg(arr) {\n  return Math.round(arr.reduce((total, i) => total + i) / arr.length);\n}\n\nfunction generateRandomList(count, min, max) {\n  if (count < 1) throw new Error(\"count must be > 0\");\n  if (min < 1 || max < 1) throw new Error(\"min and max must be > 0\");\n  if (min > max) throw new Error(\"max must be > min\");\n  const list = [];\n  for (let i = 0; i < count; i++) {\n    list.push(getRandomIntInclusive(min, max));\n  }\n  return list;\n}\n\nexport function generateTargetList(count, target, min, max) {\n  let i = 0;\n  do {\n    const list = generateRandomList(count, min, max);\n    const avg = roundAvg(list);\n    if (avg === target) {\n      console.debug(`Took ${i + 1} tries to generate.`);\n      return list;\n    }\n    i++;\n  } while (i < 10000);\n  console.error(\n    `Couldn't generate target list after ${i} attempts. Returning random list.`\n  );\n  return generateRandomList(count, min, max);\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport createExcelFile from \"../lib/excel\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: 400,\n    maxWidth: \"95%\",\n    margin: \"0 auto\"\n  },\n  table: {\n    width: \"100%\"\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  icon: {\n    marginRight: \"-12px\"\n  }\n});\n\nexport default function Results({ results, avg }) {\n  const classes = useStyles();\n\n  function handleSave() {\n    createExcelFile(results, avg);\n  }\n\n  return (\n    <Paper className={classes.root} elevation={5}>\n    <Toolbar>\n      <Typography variant=\"h6\">VR {avg}</Typography>\n      <span className={classes.spacer}/>\n      <IconButton className={classes.icon} onClick={handleSave}>\n        <SaveIcon />\n      </IconButton>\n    </Toolbar>\n      <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <TableCell>#</TableCell>\n            <TableCell align=\"right\">Ratio</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {results.map((r, i) => (\n            <TableRow key={i}>\n              <TableCell>{i + 1}</TableCell>\n              <TableCell align=\"right\">{r}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n}\n","import XLSX from \"xlsx\";\n\nexport default function createExcelFile(results, avg) {\n  const data = results.map((r, i) => [i + 1, r]);\n  data.unshift([\"#\", \"Ratio\"]);\n  const ws = XLSX.utils.aoa_to_sheet(data);\n  const wb = XLSX.utils.book_new();\n  XLSX.utils.book_append_sheet(wb, ws, \"VR Schedule\");\n  const filename = `VR ${avg} Schedule - ${new Date().getTime()}.xlsx`;\n  XLSX.writeFile(wb, filename);\n}\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TitleBar from \"../components/TitleBar\";\nimport InputForm from \"../components/InputForm\";\nimport { generateTargetList, roundAvg } from \"../lib/generator\";\nimport Results from \"../components/Results\";\n\nconst useStyles = makeStyles({\n  root: {\n    height: \"100%\",\n    width: \"100%\",\n    display: \"flex\",\n    flexFlow: \"column nowrap\",\n    alignItems: \"stretch\"\n  },\n  overflowContainer: {\n    width: \"100%\",\n    padding: 8,\n    overflow: \"auto\"\n  },\n  spacer: {\n    height: 16,\n    width: \"100%\"\n  }\n});\n\nexport default function Page() {\n  const classes = useStyles();\n  const [state, setState] = useState(null);\n\n  function handleGenerate({ min, max, count, target }) {\n    const list = generateTargetList(count, target, min, max);\n    console.debug(list);\n    setState({ results: list, avg: roundAvg(list) });\n  }\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <TitleBar />\n      <div className={classes.overflowContainer}>\n        <InputForm onGenerate={handleGenerate} />\n        <div className={classes.spacer} />\n        {state == null ? null : (\n          <Results results={state.results} avg={state.avg} />\n        )}\n      </div>\n    </div>\n  );\n}\n","import \"./installStyles\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './layout/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}